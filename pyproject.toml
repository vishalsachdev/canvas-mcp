[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "canvas-mcp"
version = "1.0.0"
description = "A Model Context Protocol server for Canvas LMS integration"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
authors = [
    { name = "Vishal Sachdev", email = "vishal@example.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Education",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Content Management System",
]
keywords = ["canvas", "lms", "mcp", "claude", "education", "api"]
dependencies = [
    "fastmcp>=1.0.0",
    "httpx>=0.28.1",
    "requests>=2.32.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.urls]
Homepage = "https://github.com/vishalsachdev/canvas-mcp"
Repository = "https://github.com/vishalsachdev/canvas-mcp"
Documentation = "https://github.com/vishalsachdev/canvas-mcp/blob/main/README.md"
Issues = "https://github.com/vishalsachdev/canvas-mcp/issues"

[project.scripts]
canvas-mcp-server = "canvas_mcp.server:main"

[tool.hatch.version]
path = "src/canvas_mcp/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/canvas_mcp"]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py310']
line-length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"